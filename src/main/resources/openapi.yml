openapi: 3.1.0
info:
  title: MS-Resume API - cristiansrc.com
  description: Microservicio REST para gestionar la información del portfolio personal, incluyendo datos básicos, experiencia laboral, habilidades, blog y contenido multimedia.
  version: 1.0.0
  contact:
    name: Cristian SRC
    url: https://cristiansrc.com
    email: contacto@cristiansrc.com

servers:
  - url: http://localhost:8080/v1/ms-resume
    description: Servidor local para desarrollo y pruebas
  - url: https://api.cristiansrc.com/v1/ms-resume
    description: Servidor de producción
  - url: https://dev-api.cristiansrc.com/v1/ms-resume
    description: Servidor de desarrollo


paths:
  # Basic Data Endpoints
  /basic-data/{id}:
    get:
      tags:
        - Basic Data
      summary: Obtener datos básicos por ID
      description: Recupera la información básica del perfil profesional
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Datos básicos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicDataResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Basic Data
      summary: Actualizar datos básicos
      description: Actualiza la información básica del perfil profesional
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicDataRequest'
      responses:
        '204':
          description: Datos básicos actualizados exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Image URL Endpoints
  /image-url:
    get:
      tags:
        - Image URL
      summary: Obtener todas las URLs de imágenes
      description: Recupera la lista completa de URLs de imágenes utilizadas en el portal
      responses:
        '200':
          description: Lista de URLs de imágenes obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageUrlResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Image URL
      summary: Crear nueva URL de imagen
      description: Registra una nueva URL de imagen en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrlRequest'
      responses:
        '201':
          description: URL de imagen creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /image-url/{id}:
    get:
      tags:
        - Image URL
      summary: Obtener URL de imagen por ID
      description: Recupera una URL de imagen específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: URL de imagen obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUrlResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Image URL
      summary: Eliminar URL de imagen
      description: Elimina una URL de imagen del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: URL de imagen eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Video URL Endpoints
  /video-url:
    get:
      tags:
        - Video URL
      summary: Obtener todas las URLs de videos
      description: Recupera la lista completa de URLs de videos almacenados en YouTube
      responses:
        '200':
          description: Lista de URLs de videos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoUrlResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Video URL
      summary: Crear nueva URL de video
      description: Registra una nueva URL de video en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUrlRequest'
      responses:
        '201':
          description: URL de video creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /video-url/{id}:
    get:
      tags:
        - Video URL
      summary: Obtener URL de video por ID
      description: Recupera una URL de video específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: URL de video obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUrlResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Video URL
      summary: Eliminar URL de video
      description: Elimina una URL de video del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: URL de video eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Label Endpoints
  /label:
    get:
      tags:
        - Label
      summary: Obtener todas las etiquetas
      description: Recupera la lista completa de etiquetas que se visualizan en el home
      responses:
        '200':
          description: Lista de etiquetas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabelResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Label
      summary: Crear nueva etiqueta
      description: Registra una nueva etiqueta en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelRequest'
      responses:
        '201':
          description: Etiqueta creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /label/{id}:
    get:
      tags:
        - Label
      summary: Obtener etiqueta por ID
      description: Recupera una etiqueta específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Etiqueta obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Label
      summary: Eliminar etiqueta
      description: Elimina una etiqueta del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Etiqueta eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Home Endpoints
  /home/{id}:
    get:
      tags:
        - Home
      summary: Obtener información del home
      description: Recupera la información configurada para la página de inicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Información del home obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Home
      summary: Actualizar información del home
      description: Actualiza la configuración de la página de inicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeRequest'
      responses:
        '204':
          description: Información del home actualizada exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Blog Endpoints
  /blog:
    get:
      tags:
        - Blog
      summary: Obtener artículos del blog con paginación
      description: Recupera la lista paginada de artículos del blog tecnológico
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Número de página (comenzando desde 0)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Cantidad de elementos por página
        - name: sort
          in: query
          required: false
          schema:
            type: string
            default: "id,desc"
          description: Campo y dirección de ordenamiento (ej. "title,asc" o "id,desc")
      responses:
        '200':
          description: Lista paginada de artículos obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPageResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Blog
      summary: Crear nuevo artículo del blog
      description: Registra un nuevo artículo en el blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogRequest'
      responses:
        '201':
          description: Artículo del blog creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /blog/{id}:
    get:
      tags:
        - Blog
      summary: Obtener artículo del blog por ID
      description: Recupera un artículo específico del blog por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Artículo del blog obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Blog
      summary: Actualizar artículo del blog
      description: Actualiza un artículo existente del blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogRequest'
      responses:
        '204':
          description: Artículo del blog actualizado exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Blog
      summary: Eliminar artículo del blog
      description: Elimina un artículo del blog del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Artículo del blog eliminado exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Skill Type Endpoints
  /skill-type:
    get:
      tags:
        - Skill Type
      summary: Obtener todos los tipos de habilidades
      description: Recupera la lista completa de categorías de habilidades técnicas
      responses:
        '200':
          description: Lista de tipos de habilidades obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillTypeResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Skill Type
      summary: Crear nuevo tipo de habilidad
      description: Registra una nueva categoría de habilidad en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillTypeRequest'
      responses:
        '201':
          description: Tipo de habilidad creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /skill-type/{id}:
    get:
      tags:
        - Skill Type
      summary: Obtener tipo de habilidad por ID
      description: Recupera un tipo de habilidad específico por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tipo de habilidad obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillTypeResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Skill Type
      summary: Actualizar tipo de habilidad
      description: Actualiza un tipo de habilidad existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillTypeRequest'
      responses:
        '204':
          description: Tipo de habilidad actualizado exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Skill Type
      summary: Eliminar tipo de habilidad
      description: Elimina un tipo de habilidad del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Tipo de habilidad eliminado exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Skill Endpoints
  /skill:
    get:
      tags:
        - Skill
      summary: Obtener todas las habilidades
      description: Recupera la lista completa de habilidades técnicas registradas
      responses:
        '200':
          description: Lista de habilidades obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Skill
      summary: Crear nueva habilidad
      description: Registra una nueva habilidad técnica en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRequest'
      responses:
        '201':
          description: Habilidad creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /skill/{id}:
    get:
      tags:
        - Skill
      summary: Obtener habilidad por ID
      description: Recupera una habilidad específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Habilidad obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Skill
      summary: Actualizar habilidad
      description: Actualiza una habilidad existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRequest'
      responses:
        '204':
          description: Habilidad actualizada exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Skill
      summary: Eliminar habilidad
      description: Elimina una habilidad del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Habilidad eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Skill Son Endpoints
  /skill-son:
    get:
      tags:
        - Skill Son
      summary: Obtener todas las especializaciones de habilidades
      description: Recupera la lista completa de especializaciones y tecnologías específicas
      responses:
        '200':
          description: Lista de especializaciones obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillSonResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Skill Son
      summary: Crear nueva especialización de habilidad
      description: Registra una nueva especialización o tecnología específica
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillSonRequest'
      responses:
        '201':
          description: Especialización creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /skill-son/{id}:
    get:
      tags:
        - Skill Son
      summary: Obtener especialización por ID
      description: Recupera una especialización específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Especialización obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillSonResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Skill Son
      summary: Actualizar especialización
      description: Actualiza una especialización existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillSonRequest'
      responses:
        '204':
          description: Especialización actualizada exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Skill Son
      summary: Eliminar especialización
      description: Elimina una especialización del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Especialización eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Experience Endpoints
  /experience:
    get:
      tags:
        - Experience
      summary: Obtener todas las experiencias laborales
      description: Recupera la lista completa de experiencias laborales registradas
      responses:
        '200':
          description: Lista de experiencias laborales obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExperienceResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Experience
      summary: Crear nueva experiencia laboral
      description: Registra una nueva experiencia laboral en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceRequest'
      responses:
        '201':
          description: Experiencia laboral creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /experience/{id}:
    get:
      tags:
        - Experience
      summary: Obtener experiencia laboral por ID
      description: Recupera una experiencia laboral específica por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Experiencia laboral obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Experience
      summary: Actualizar experiencia laboral
      description: Actualiza una experiencia laboral existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceRequest'
      responses:
        '204':
          description: Experiencia laboral actualizada exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Experience
      summary: Eliminar experiencia
      description: Elimina una experiencia del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: experiencia eliminada exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Futured Project Endpoints
  /futured-project:
    get:
      tags:
        - Futured Project
      summary: Obtener todos los proyectos destacados
      description: Recupera la lista completa de proyectos destacados del portfolio
      responses:
        '200':
          description: Lista de proyectos destacados obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FuturedProjectResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Futured Project
      summary: Crear nuevo proyecto destacado
      description: Registra un nuevo proyecto destacado en el portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuturedProjectRequest'
      responses:
        '201':
          description: Proyecto destacado creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /futured-project/{id}:
    get:
      tags:
        - Futured Project
      summary: Obtener proyecto destacado por ID
      description: Recupera un proyecto destacado específico por su identificador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Proyecto destacado obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuturedProjectResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Futured Project
      summary: Actualizar proyecto destacado
      description: Actualiza un proyecto destacado existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuturedProjectRequest'
      responses:
        '204':
          description: Proyecto destacado actualizado exitosamente
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Futured Project
      summary: Eliminar proyecto destacado
      description: Elimina un proyecto destacado del portfolio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Proyecto destacado eliminado exitosamente
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  # Curriculum Endpoints
  /curriculum:
    get:
      tags:
        - Curriculum
      summary: Descargar curriculum en PDF
      description: Genera y descarga el curriculum vitae en formato PDF basado en la información almacenada en la base de datos
      responses:
        '200':
          description: Curriculum PDF generado y descargado exitosamente
          content:
            application/pdf:
              schema:
                type: string
                format: binary
                description: Archivo PDF del curriculum vitae
          headers:
            Content-Disposition:
              schema:
                type: string
              description: Encabezado para forzar la descarga del archivo
            Content-Type:
              schema:
                type: string
              description: Tipo de contenido del archivo
            Content-Length:
              schema:
                type: integer
              description: Tamaño del archivo en bytes
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    # Request Schemas
    BasicDataRequest:
      type: object
      description: Estructura de datos básicos del perfil profesional incluyendo información personal y redes sociales
      required:
        - firstName
        - firstSurName
        - dateBirth
        - email
      properties:
        firstName:
          type: string
          description: Nombre principal
          minLength: 2
          maxLength: 50
        othersName:
          type: string
          description: Nombres adicionales
          maxLength: 100
        firstSurName:
          type: string
          description: Primer apellido
          minLength: 2
          maxLength: 50
        othersSurName:
          type: string
          description: Apellidos adicionales
          maxLength: 100
        dateBirth:
          type: string
          format: date
          description: Fecha de nacimiento
        located:
          type: string
          description: Ubicación actual
          maxLength: 100
        startWorkingDate:
          type: string
          format: date
          description: Fecha de inicio laboral
        greeting:
          type: string
          description: Saludo personalizado
          maxLength: 500
        email:
          type: string
          format: email
          description: Correo electrónico de contacto
        instagram:
          type: string
          description: Usuario de Instagram
          maxLength: 100
        linkedin:
          type: string
          description: Perfil de LinkedIn
          maxLength: 200
        x:
          type: string
          description: Usuario de X (Twitter)
          maxLength: 100
        github:
          type: string
          description: Usuario de GitHub
          maxLength: 100
        description:
          type: string
          description: Descripción profesional
          maxLength: 1000

    ImageUrlRequest:
      type: object
      description: Estructura para registrar URLs de imágenes utilizadas en el portal
      required:
        - name
        - file
      properties:
        name:
          type: string
          description: Nombre identificador de la imagen
          minLength: 1
          maxLength: 100
        file:
          type: string
          description: Ruta o identificador del archivo de imagen
          minLength: 1
          maxLength: 500

    VideoUrlRequest:
      type: object
      description: Estructura para registrar URLs de videos almacenados en YouTube
      required:
        - name
        - url
      properties:
        name:
          type: string
          description: Nombre identificador del video
          minLength: 1
          maxLength: 100
        url:
          type: string
          format: uri
          description: URL del video en YouTube
          minLength: 1
          maxLength: 500

    LabelRequest:
      type: object
      description: Estructura para registrar etiquetas que se visualizan en el home
      required:
        - name
      properties:
        name:
          type: string
          description: Texto de la etiqueta
          minLength: 1
          maxLength: 50

    HomeRequest:
      type: object
      description: Estructura de configuración para la página de inicio
      required:
        - greeting
        - buttonWorkLabel
        - buttonContactLabel
      properties:
        greeting:
          type: string
          description: Mensaje de bienvenida
          minLength: 1
          maxLength: 200
        imageUrlid:
          type: integer
          format: int64
          description: Identificador de la imagen (para actualizaciones)
        buttonWorkLabel:
          type: string
          description: Texto del botón de trabajo
          minLength: 1
          maxLength: 50
        buttonContactLabel:
          type: string
          description: Texto del botón de contacto
          minLength: 1
          maxLength: 50
        labelIds:
          type: array
          description: IDs de las etiquetas asociadas
          items:
            type: integer
            format: int64

    BlogRequest:
      type: object
      description: Estructura para registrar artículos del blog tecnológico
      required:
        - title
        - cleanUrlTitle
        - descriptionShort
        - description
      properties:
        id:
          type: integer
          format: int64
          description: Identificador del artículo (para actualizaciones)
        title:
          type: string
          description: Título del artículo
          minLength: 1
          maxLength: 200
        cleanUrlTitle:
          type: string
          description: Título limpio para URL amigable
          minLength: 1
          maxLength: 200
        descriptionShort:
          type: string
          description: Descripción corta del artículo
          minLength: 1
          maxLength: 300
        description:
          type: string
          description: Contenido completo del artículo
          minLength: 1

    SkillTypeRequest:
      type: object
      description: Estructura para registrar categorías de habilidades técnicas
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre del tipo de habilidad
          minLength: 1
          maxLength: 100
        skillIds:
          type: array
          description: IDs de las habilidades asociadas
          items:
            type: integer
            format: int64

    SkillRequest:
      type: object
      description: Estructura para registrar habilidades técnicas específicas
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre de la habilidad
          minLength: 1
          maxLength: 100
        skillSonIds:
          type: array
          description: IDs de las especializaciones asociadas
          items:
            type: integer
            format: int64

    SkillSonRequest:
      type: object
      description: Estructura para registrar especializaciones de habilidades o tecnologías específicas
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre de la especialización
          minLength: 1
          maxLength: 100

    ExperienceRequest:
      type: object
      description: Estructura para registrar experiencias laborales profesionales
      required:
        - yearStart
        - company
        - description
      properties:
        yearStart:
          type: string
          format: date
          description: Fecha de inicio de la experiencia
        yearEnd:
          type: string
          format: date
          description: Fecha de finalización de la experiencia
        company:
          type: string
          description: Nombre de la empresa
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: Descripción de las responsabilidades y logros
          minLength: 1
          maxLength: 1000
        skillSonIds:
          type: array
          description: IDs de las tecnologías utilizadas
          items:
            type: integer
            format: int64

    FuturedProjectRequest:
      type: object
      description: Estructura para registrar proyectos destacados del portfolio
      required:
        - name
        - descriptionShort
        - description
      properties:
        name:
          type: string
          description: Nombre del proyecto
          minLength: 1
          maxLength: 100
        experienceId:
          type: integer
          format: int64
          description: ID de la experiencia laboral asociada
        descriptionShort:
          type: string
          description: Descripción breve del proyecto
          minLength: 1
          maxLength: 300
        description:
          type: string
          description: Descripción detallada del proyecto
          minLength: 1
          maxLength: 2000
        imageListUrlId:
          type: integer
          format: int64
          description: ID de la imagen de lista
        imageUrlId:
          type: integer
          format: int64
          description: ID de la imagen principal

    # Response Schemas
    BasicDataResponse:
      type: object
      description: Datos básicos del perfil profesional incluyendo información personal y redes sociales consultados
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        firstName:
          type: string
          description: Nombre principal
        othersName:
          type: string
          description: Nombres adicionales
        firstSurName:
          type: string
          description: Primer apellido
        othersSurName:
          type: string
          description: Apellidos adicionales
        dateBirth:
          type: string
          format: date
          description: Fecha de nacimiento
        located:
          type: string
          description: Ubicación actual
        startWorkingDate:
          type: string
          format: date
          description: Fecha de inicio laboral
        greeting:
          type: string
          description: Saludo personalizado
        email:
          type: string
          format: email
          description: Correo electrónico de contacto
        instagram:
          type: string
          description: Usuario de Instagram
        linkedin:
          type: string
          description: Perfil de LinkedIn
        x:
          type: string
          description: Usuario de X (Twitter)
        github:
          type: string
          description: Usuario de GitHub
        description:
          type: string
          description: Descripción profesional

    ImageUrlResponse:
      type: object
      description: URLs de imágenes utilizadas en el portal consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre identificador de la imagen
        url:
          type: string
          description: URL de la imagen

    VideoUrlResponse:
      type: object
      description: URLs de videos almacenados en YouTube consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre identificador del video
        url:
          type: string
          format: uri
          description: URL del video en YouTube

    LabelResponse:
      type: object
      description: Etiquetas que se visualizan en el home consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Texto de la etiqueta

    HomeResponse:
      type: object
      description: Información de configuración de la página de inicio
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        greeting:
          type: string
          description: Mensaje de bienvenida
        imageUrl:
          $ref: '#/components/schemas/ImageUrlResponse'
        buttonWorkLabel:
          type: string
          description: Texto del botón de trabajo
        buttonContactLabel:
          type: string
          description: Texto del botón de contacto
        labels:
          type: array
          description: Etiquetas asociadas
          items:
            $ref: '#/components/schemas/LabelResponse'

    BlogResponse:
      type: object
      description: Artículos del blog tecnológico consultados desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        title:
          type: string
          description: Título del artículo
        cleanUrlTitle:
          type: string
          description: Título limpio para URL amigable
        descriptionShort:
          type: string
          description: Descripción corta del artículo
        description:
          type: string
          description: Contenido completo del artículo

    BlogPageResponse:
      type: object
      description: Respuesta paginada de artículos del blog
      properties:
        content:
          type: array
          description: Lista de artículos en la página actual
          items:
            $ref: '#/components/schemas/BlogResponse'
        pageable:
          type: object
          description: Información de paginación
          properties:
            sort:
              type: object
              properties:
                empty:
                  type: boolean
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            offset:
              type: integer
              format: int64
            pageSize:
              type: integer
            pageNumber:
              type: integer
            paged:
              type: boolean
            unpaged:
              type: boolean
        last:
          type: boolean
          description: Indica si es la última página
        totalPages:
          type: integer
          description: Total de páginas disponibles
        totalElements:
          type: integer
          format: int64
          description: Total de elementos
        size:
          type: integer
          description: Tamaño de la página
        number:
          type: integer
          description: Número de página actual
        sort:
          type: object
          description: Información de ordenamiento
          properties:
            empty:
              type: boolean
            sorted:
              type: boolean
            unsorted:
              type: boolean
        first:
          type: boolean
          description: Indica si es la primera página
        numberOfElements:
          type: integer
          description: Número de elementos en la página actual
        empty:
          type: boolean
          description: Indica si la página está vacía

    SkillTypeResponse:
      type: object
      description: Categorías de habilidades técnicas consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre del tipo de habilidad
        skills:
          type: array
          description: Habilidades asociadas
          items:
            $ref: '#/components/schemas/SkillResponse'

    SkillResponse:
      type: object
      description: Habilidades técnicas específicas consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre de la habilidad
        skillSons:
          type: array
          description: Especializaciones asociadas
          items:
            $ref: '#/components/schemas/SkillSonResponse'

    SkillSonResponse:
      type: object
      description: Especializaciones de habilidades o tecnologías específicas consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre de la especialización

    ExperienceResponse:
      type: object
      description: Experiencias laborales profesionales consultadas desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        yearStart:
          type: string
          format: date
          description: Fecha de inicio de la experiencia
        yearEnd:
          type: string
          format: date
          description: Fecha de finalización de la experiencia
        company:
          type: string
          description: Nombre de la empresa
        description:
          type: string
          description: Descripción de las responsabilidades y logros
        skillSons:
          type: array
          description: Tecnologías utilizadas
          items:
            $ref: '#/components/schemas/SkillSonResponse'

    FuturedProjectResponse:
      type: object
      description: Proyectos destacados del portfolio consultados desde la base de datos
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único
        name:
          type: string
          description: Nombre del proyecto
        descriptionShort:
          type: string
          description: Descripción breve del proyecto
        description:
          type: string
          description: Descripción detallada del proyecto
        experience:
          $ref: '#/components/schemas/ExperienceResponse'
        imageListUrl:
          $ref: '#/components/schemas/ImageUrlResponse'
        imageUrl:
          $ref: '#/components/schemas/ImageUrlResponse'

    # Error Response Schema
    ErrorResponse:
      type: object
      description: Estructura genérica para respuestas de error
      required:
        - timestamp
        - status
        - error
        - path
      properties:
        timestamp:
          type: string
          format: date-time
          description: Fecha y hora del error
        status:
          type: integer
          description: Código de estado HTTP
        error:
          type: string
          description: Descripción del tipo de error
        message:
          type: string
          description: Mensaje detallado del error
        path:
          type: string
          description: Ruta donde ocurrió el error
        validationErrors:
          type: array
          description: Errores de validación específicos (solo para error 400)
          items:
            type: object
            properties:
              field:
                type: string
                description: Campo que causó el error
              message:
                type: string
                description: Mensaje de error del campo

  responses:
    BadRequest:
      description: Solicitud incorrecta - Error de validación en los datos enviados
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []