openapi: 3.1.0
info:
  title: Product Service API
  description: API de microservicios para gestionar productos, categorías, colores, tipos, tallas e imágenes en un e-commerce.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo
tags:
  - name: Category
    description: Operaciones sobre categorías de productos
  - name: Color
    description: Operaciones sobre colores de productos
  - name: Type
    description: Operaciones sobre tipos de productos
  - name: Size
    description: Operaciones sobre tallas de productos
  - name: Image
    description: Operaciones sobre imágenes de productos
  - name: Product
    description: Operaciones sobre productos genéricos
  - name: ProductClothing
    description: Operaciones sobre productos de ropa
  - name: ProductShoes
    description: Operaciones sobre productos de zapatos
  - name: ProductGeneric
    description: Operaciones sobre productos genéricos

paths:
  /category:
    post:
      tags: [Category]
      summary: Crear una nueva categoría
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '200':
          description: Categoría creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

    get:
      tags: [Category]
      summary: Obtener todas las categorías
      operationId: listCategories
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryResponse'

  /category/{id}:
    get:
      tags: [Category]
      summary: Obtener categoría por id
      operationId: getCategoryById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Categoría encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '404':
          description: Categoría no encontrada

    put:
      tags: [Category]
      summary: Actualizar categoría por id
      operationId: updateCategory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '204':
          description: Categoría actualizada correctamente
        '400':
          description: Petición inválida
        '404':
          description: Categoría no encontrada
        '422':
          description: Error de validación

    delete:
      tags: [Category]
      summary: Eliminar categoría por id
      operationId: deleteCategory
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Categoría eliminada correctamente
        '404':
          description: Categoría no encontrada

  /color:
    get:
      tags: [Color]
      summary: Obtener lista de colores
      operationId: getColors
      responses:
        '200':
          description: Lista de colores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColorResponse'

  /color/generic/{idProduct}:
    get:
      tags: [Color]
      summary: Obtener lista de colores
      operationId: getColorsByProductGeneric
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de colores para productos genericos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColorResponse'

  /type:
    get:
      tags: [Type]
      summary: Obtener lista de tipos de producto
      operationId: getTypes
      responses:
        '200':
          description: Lista de tipos de producto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TypeResponse'

  /size/clothing/{idProduct}/{idColor}:
    get:
      tags: [Size]
      summary: Obtener lista de tallas de ropa
      operationId: getSizeClothing
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: idColor
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de tallas de ropa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SizeClothingResponse'

  /size/shoes/{idProduct}/{idColor}:
    get:
      tags: [Size]
      summary: Obtener lista de tallas de zapatos
      operationId: getSizeShoes
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: idColor
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de tallas de zapatos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SizeShoesResponse'

  /image:
    post:
      tags: [Image]
      summary: Subir una imagen de producto
      operationId: uploadImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
      responses:
        '201':
          description: Imagen subida exitosamente
          headers:
            Location:
              description: URI de la imagen creada
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

  /image/{id}:
    delete:
      tags: [ Image ]
      summary: Eliminar una imagen de producto
      operationId: deleteImage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Imagen eliminada correctamente
        '404':
          description: Imagen no encontrada
    get:
      tags: [ Image ]
      summary: Obtener una imagen por si id
      operationId: getImage
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Imagen encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
        '404':
          description: Imagen no encontrada

  /product:
    post:
      tags: [Product]
      summary: Crear un producto genérico
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

    get:
      tags: [Product]
      summary: Obtener todos los productos
      operationId: listProducts
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'

  /product/{id}:
    get:
      tags: [Product]
      summary: Obtener producto genérico por id
      operationId: getProductById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Producto no encontrado

    put:
      tags: [Product]
      summary: Actualizar producto genérico por id
      operationId: updateProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '204':
          description: Producto actualizado
        '400':
          description: Petición inválida
        '404':
          description: Producto no encontrado
        '422':
          description: Error de validación

    delete:
      tags: [Product]
      summary: Eliminar producto genérico por id
      operationId: deleteProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Producto eliminado
        '404':
          description: Producto no encontrado

  /product/clothing/{idProduct}:
    post:
      tags: [ProductClothing]
      summary: Crear producto de ropa
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      operationId: createProductClothing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClothingRequest'
      responses:
        '200':
          description: Producto de ropa creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

    get:
      tags: [ProductClothing]
      summary: Obtener lista de productos de ropa
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      operationId: listProductClothing
      responses:
        '200':
          description: Lista de productos de ropa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductClothingResponse'

  /product/clothing/{idProduct}/{id}:
    get:
      tags: [ProductClothing]
      summary: Obtener producto de ropa por id
      operationId: getProductClothingById
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto de ropa encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClothingResponse'
        '404':
          description: Producto de ropa no encontrado

    put:
      tags: [ProductClothing]
      summary: Actualizar producto de ropa por id
      operationId: updateProductClothing
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClothingRequest'
      responses:
        '204':
          description: Producto de ropa actualizado
        '400':
          description: Petición inválida
        '404':
          description: Producto de ropa no encontrado
        '422':
          description: Error de validación

    delete:
      tags: [ProductClothing]
      summary: Eliminar producto de ropa por id
      operationId: deleteProductClothing
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Producto de ropa eliminado
        '404':
          description: Producto de ropa no encontrado

  /product/shoes/{idProduct}:
    post:
      tags: [ProductShoes]
      summary: Crear producto de zapatos
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      operationId: createProductShoes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductShoesRequest'
      responses:
        '200':
          description: Producto de zapatos creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

    get:
      tags: [ProductShoes]
      summary: Obtener lista de productos de zapatos
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      operationId: listProductShoes
      responses:
        '200':
          description: Lista de productos de zapatos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductShoesResponse'

  /product/shoes/{idProduct}/{id}:
    get:
      tags: [ProductShoes]
      summary: Obtener producto de zapatos por id
      operationId: getProductShoesById
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto de zapatos encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductShoesResponse'
        '404':
          description: Producto de zapatos no encontrado

    put:
      tags: [ProductShoes]
      summary: Actualizar producto de zapatos por id
      operationId: updateProductShoes
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductShoesRequest'
      responses:
        '204':
          description: Producto de zapatos actualizado
        '400':
          description: Petición inválida
        '404':
          description: Producto de zapatos no encontrado
        '422':
          description: Error de validación

    delete:
      tags: [ProductShoes]
      summary: Eliminar producto de zapatos por id
      operationId: deleteProductShoes
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Producto de zapatos eliminado
        '404':
          description: Producto de zapatos no encontrado

  /product/generic/{idProduct}:
    post:
      tags: [ProductGeneric]
      summary: Crear producto genérico
      operationId: createProductGeneric
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGenericRequest'
      responses:
        '200':
          description: Producto genérico creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Petición inválida
        '422':
          description: Error de validación

    get:
      tags: [ProductGeneric]
      summary: Obtener lista de productos genéricos
      operationId: listProductGeneric
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de productos genéricos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGenericResponse'

  /product/generic/{idProduct}/{id}:
    get:
      tags: [ProductGeneric]
      summary: Obtener producto genérico por id
      operationId: getProductGenericById
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto genérico encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGenericResponse'
        '404':
          description: Producto genérico no encontrado

    put:
      tags: [ProductGeneric]
      summary: Actualizar producto genérico por id
      operationId: updateProductGeneric
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGenericRequest'
      responses:
        '204':
          description: Producto genérico actualizado
        '400':
          description: Petición inválida
        '404':
          description: Producto genérico no encontrado
        '422':
          description: Error de validación

    delete:
      tags: [ProductGeneric]
      summary: Eliminar producto genérico por id
      operationId: deleteProductGeneric
      parameters:
        - in: path
          name: idProduct
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Producto genérico eliminado
        '404':
          description: Producto genérico no encontrado

  /shopping/product/{shopId}:
    post:
      tags: [ShoppingProduct]
      summary: Obtener productos completos de una tienda
      operationId: getFullProductsByShop
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopingProductFilterRequest'
      responses:
        '200':
          description: Lista de productos completos de la tienda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFullResponse'
        '404':
          description: Tienda no encontrada

  /shopping/product/clothing/{shopId}/{id}:
    get:
      tags: [ShoppingProduct]
      summary: Obtener producto de ropa por id dfe una tienda
      operationId: getShoppingProductClothingById
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto de ropa encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFullClothingResponse'
        '404':
          description: Producto de ropa no encontrado

  /shopping/product/shoes/{shopId}/{id}:
    get:
      tags: [ShoppingProduct]
      summary: Obtener producto de zapatos por id
      operationId: getShoppingProductShoesById
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto de zapatos encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFullShoesResponse'
        '404':
          description: Producto de zapatos no encontrado

  /shopping/product/generic/{shopId}/{id}:
    get:
      tags: [ShoppingProduct]
      summary: Obtener producto genérico por id
      operationId: getShoppingProductGenericById
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto genérico encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFullGenericResponse'
        '404':
          description: Producto genérico no encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PostResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1

    CategoryRequest:
      type: object
      required: [name, description, icon]
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 50
          examples:
            - "Camisetas"
        description:
          type: string
          minLength: 5
          maxLength: 255
          examples:
            - "Categoría para camisetas y t-shirts"
        icon:
          type: string
          minLength: 1
          maxLength: 50
          examples:
            - "tshirt"

    CategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        name:
          type: string
          examples:
            - "Camisetas"
        description:
          type: string
          examples:
            - "Categoría para camisetas y t-shirts"
        icon:
          type: string
          examples:
            - "tshirt"

    ColorResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 5
        name:
          type: string
          examples:
            - "Rojo"
        hexa:
          type: string
          pattern: "^#[A-Fa-f0-9]{6}$"
          examples:
            - "#FF0000"

    TypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 2
        name:
          type: string
          examples:
            - "Accesorio"

    SizeClothingResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 10
        name:
          type: string
          examples:
            - "L"
        description:
          type: string
          examples:
            - "Talla grande"

    SizeShoesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 15
        cm:
          type: string
          examples:
            - "28"
        eu:
          type: string
          examples:
            - "44"
        us:
          type: string
          examples:
            - "11"
        uk:
          type: string
          examples:
            - "10"

    ImageRequest:
      type: object
      required: [name, base64Image]
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 255
          examples:
            - "camiseta-1.jpg"
        base64Image:
          type: string
          minLength: 50
          examples:
            - "iVBORw0KGgoAAAANSUhEUgAAAAUA..."

    ImageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 100
        nameOriginal:
          type: string
          examples:
            - "original_camiseta.jpg"
        url:
          type: string
          examples:
            - "img_100.jpg"

    ProductRequest:
      type: object
      required: [name, description, descriptionShort, categoryId, imageId, typeId, disabled]
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 80
          examples:
            - "Camiseta Sonic"
        description:
          type: string
          minLength: 10
          maxLength: 1000
          examples:
            - "Camiseta original inspirada en Sonic, 100% algodón"
        descriptionShort:
          type: string
          minLength: 5
          maxLength: 255
          examples:
            - "Camiseta Sonic color azul"
        categoryId:
          type: integer
          format: int64
          examples:
            - 1
        imageId:
          type: integer
          format: int64
          examples:
            - 100
        typeId:
          type: integer
          format: int64
          examples:
            - 2
        shopIds:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [ 100, 101, 102 ]
            - null
        disabled:
          type: boolean
          examples:
            - false

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        name:
          type: string
          examples:
            - "Camiseta Sonic"
        description:
          type: string
          examples:
            - "Camiseta original inspirada en Sonic, 100% algodón"
        descriptionShort:
          type: string
          examples:
            - "Camiseta Sonic color azul"
        shopIds:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [ 100, 101, 102 ]
        category:
          $ref: '#/components/schemas/CategoryResponse'
        image:
          $ref: '#/components/schemas/ImageResponse'
        type:
          $ref: '#/components/schemas/TypeResponse'
        disabled:
          type: boolean
          examples:
            - false

    ProductClothingRequest:
      type: object
      required: [colorId, sizeClothingId, units, price, imageList, disabled]
      properties:
        colorId:
          type: integer
          format: int64
          examples:
            - 5
        sizeClothingId:
          type: integer
          format: int64
          examples:
            - 10
        units:
          type: integer
          minimum: 0
          examples:
            - 100
        price:
          type: number
          format: double
          minimum: 0
          examples:
            - 59.99
        imageList:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [100, 101, 102]
        disabled:
          type: boolean
          examples:
            - false

    ProductClothingResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 55
        color:
          $ref: '#/components/schemas/ColorResponse'
        sizeClothing:
          $ref: '#/components/schemas/SizeClothingResponse'
        units:
          type: integer
          examples:
            - 100
        price:
          type: number
          format: double
          examples:
            - 59.99
        imageList:
          type: array
          items:
            $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
          examples:
            - false

    ProductShoesRequest:
      type: object
      required: [colorId, sizeShoesId, units, price, imageList, disabled]
      properties:
        colorId:
          type: integer
          format: int64
          examples:
            - 6
        sizeShoesId:
          type: integer
          format: int64
          examples:
            - 15
        units:
          type: integer
          minimum: 0
          examples:
            - 80
        price:
          type: number
          format: double
          minimum: 0
          examples:
            - 89.99
        imageList:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [110, 111]
        disabled:
          type: boolean
          examples:
            - false

    ProductShoesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 77
        color:
          $ref: '#/components/schemas/ColorResponse'
        sizeShoes:
          $ref: '#/components/schemas/SizeShoesResponse'
        units:
          type: integer
          examples:
            - 80
        price:
          type: number
          format: double
          examples:
            - 89.99
        imageList:
          type: array
          items:
            $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
          examples:
            - false

    ProductGenericRequest:
      type: object
      required: [colorId, units, price, imageList, disabled]
      properties:
        colorId:
          type: integer
          format: int64
          examples:
            - 8
        units:
          type: integer
          minimum: 0
          examples:
            - 10
        price:
          type: number
          format: double
          minimum: 0
          examples:
            - 29.99
        imageList:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [120]
        disabled:
          type: boolean
          examples:
            - false

    ShopingProductFilterRequest:
      type: object
      properties:
        typeId:
          type: integer
          format: int64
          examples:
            - 8
            - null
        categoriesIds:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [ 100, 101, 102 ]
            - null
        colorsIds:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [ 100, 101, 102 ]
            - null
        sizesIds:
          type: array
          items:
            type: integer
            format: int64
          examples:
            - [ 100, 101, 102 ]
            - null
        name:
          type: string
          examples:
            - cristiansrc
            - null
        description:
          type: string
          examples:
            - descr
            - null
        minPrice:
          type: number
          format: double
          examples:
            - 29.99
            - null
        maxPrice:
          type: number
          format: double
          examples:
            - 29.99
            - null

    ProductGenericResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 88
        color:
          $ref: '#/components/schemas/ColorResponse'
        units:
          type: integer
          examples:
            - 10
        price:
          type: number
          format: double
          examples:
            - 29.99
        imageList:
          type: array
          items:
            $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
          examples:
            - false

    ProductFullResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        typeId:
          type: integer
          format: int64
        typeName:
          type: string
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        units:
          type: integer
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        colors:
          type: string
        colorsHexa:
          type: string
        sizes:
          type: string
        disabled:
          type: boolean

    ProductFullClothingResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        descriptionShort:
          type: string
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        image:
          $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeResponse'
        category:
          $ref: '#/components/schemas/CategoryResponse'
        ProductClothingResponses:
          type: array
          items:
            $ref: '#/components/schemas/ProductClothingResponse'

    ProductFullShoesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        descriptionShort:
          type: string
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        image:
          $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeResponse'
        category:
          $ref: '#/components/schemas/CategoryResponse'
        ProductShoesResponses:
          type: array
          items:
            $ref: '#/components/schemas/ProductShoesResponse'

    ProductFullGenericResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        descriptionShort:
          type: string
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        image:
          $ref: '#/components/schemas/ImageResponse'
        disabled:
          type: boolean
        type:
          $ref: '#/components/schemas/TypeResponse'
        category:
          $ref: '#/components/schemas/CategoryResponse'
        ProductGenericResponses:
          type: array
          items:
            $ref: '#/components/schemas/ProductGenericResponse'
